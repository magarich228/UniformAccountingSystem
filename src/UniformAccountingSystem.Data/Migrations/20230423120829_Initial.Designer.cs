// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniformAccountingSystem.Data;

#nullable disable

namespace UniformAccountingSystem.Data.Migrations
{
    [DbContext(typeof(UniformAccountingContext))]
    [Migration("20230423120829_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WorkPosition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.IssuanceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("IssuanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UniformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IssuanceId");

                    b.HasIndex("UniformId");

                    b.ToTable("IssuesItem", t =>
                        {
                            t.HasCheckConstraint("CK_IssuanceItem_Amount", "Amount > 0");
                        });
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.ReceiptItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UniformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("UniformId");

                    b.ToTable("ReceiptItems", t =>
                        {
                            t.HasCheckConstraint("CK_ReceiptItem_Amount", "Amount > 0");
                        });
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.Uniform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("UniformType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("UniformTypeRefUniformType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("UniformTypeRefUniformType");

                    b.ToTable("Uniforms", t =>
                        {
                            t.HasCheckConstraint("CK_Uniform_Price", "Price > 0");
                        });
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformDiscard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Reason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UniformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UniformId");

                    b.ToTable("Discards", t =>
                        {
                            t.HasCheckConstraint("CK_UniformDiscard_Amount", "Amount > 0");
                        });
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformIssuance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Desctiption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuanceAction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("IssuanceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 23, 12, 8, 29, 632, DateTimeKind.Utc).AddTicks(6910));

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformReceipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Desctiption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ReceiptDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 23, 12, 8, 29, 632, DateTimeKind.Utc).AddTicks(6235));

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformTypeRef", b =>
                {
                    b.Property<int>("UniformType")
                        .HasColumnType("int");

                    b.Property<string>("UniformTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniformType");

                    b.ToTable("UniformTypes");

                    b.HasData(
                        new
                        {
                            UniformType = 0,
                            UniformTypeName = "Other"
                        },
                        new
                        {
                            UniformType = 1,
                            UniformTypeName = "TShirt"
                        },
                        new
                        {
                            UniformType = 2,
                            UniformTypeName = "Patns"
                        },
                        new
                        {
                            UniformType = 3,
                            UniformTypeName = "Shoes"
                        },
                        new
                        {
                            UniformType = 4,
                            UniformTypeName = "Robe"
                        },
                        new
                        {
                            UniformType = 5,
                            UniformTypeName = "Suit"
                        },
                        new
                        {
                            UniformType = 6,
                            UniformTypeName = "Gloves"
                        },
                        new
                        {
                            UniformType = 7,
                            UniformTypeName = "Mask"
                        },
                        new
                        {
                            UniformType = 8,
                            UniformTypeName = "Warm"
                        });
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformVendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasAlternateKey("Phone");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.IssuanceItem", b =>
                {
                    b.HasOne("UniformAccountingSystem.Data.Entities.UniformIssuance", "Issuance")
                        .WithMany("IssuanceItems")
                        .HasForeignKey("IssuanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniformAccountingSystem.Data.Entities.Uniform", "Uniform")
                        .WithMany()
                        .HasForeignKey("UniformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issuance");

                    b.Navigation("Uniform");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.ReceiptItem", b =>
                {
                    b.HasOne("UniformAccountingSystem.Data.Entities.UniformReceipt", "Receipt")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniformAccountingSystem.Data.Entities.Uniform", "Uniform")
                        .WithMany()
                        .HasForeignKey("UniformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");

                    b.Navigation("Uniform");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.Uniform", b =>
                {
                    b.HasOne("UniformAccountingSystem.Data.Entities.UniformTypeRef", "UniformTypeRef")
                        .WithMany()
                        .HasForeignKey("UniformTypeRefUniformType");

                    b.Navigation("UniformTypeRef");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformDiscard", b =>
                {
                    b.HasOne("UniformAccountingSystem.Data.Entities.Uniform", "Uniform")
                        .WithMany()
                        .HasForeignKey("UniformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uniform");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformIssuance", b =>
                {
                    b.HasOne("UniformAccountingSystem.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformReceipt", b =>
                {
                    b.HasOne("UniformAccountingSystem.Data.Entities.UniformVendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformIssuance", b =>
                {
                    b.Navigation("IssuanceItems");
                });

            modelBuilder.Entity("UniformAccountingSystem.Data.Entities.UniformReceipt", b =>
                {
                    b.Navigation("ReceiptItems");
                });
#pragma warning restore 612, 618
        }
    }
}
